apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt" //Need this to activate data binding

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.priomkhan.covid_19info"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    //Here we enabling dataBinding
    dataBinding {
        enabled = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.android.gms:play-services-ads:19.1.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'

    def fragment_version = "1.3.0-alpha03"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    def nav_version = "2.3.0-alpha05"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //Testing Libraries
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //Library to implement card view
    implementation 'androidx.cardview:cardview:1.0.0'

    //A coroutine is a concurrency design pattern that you can use on Android
    // to simplify code that executes asynchronously.
    //On Android, coroutines help to solve two primary problems:
    //    Manage long-running tasks that might otherwise block the main thread and cause your app to freeze.
    //    Providing main-safety, or safely calling network or disk operations from the main thread.
    def coroutines_version = "1.2.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"


    //Retrofit is a type-safe HTTP client for Android and Java.
    // With Retrofit we can compose the HTTP connection easily through
    // a simple expressive interface just like an api document.
    def retrofit2_version = "2.6.2"
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"

    // Retrofit and Moshi work together really well. And the manual work we had to do
    // of creating an adapter when I parsed JSON content will be done automatically by Retrofit.
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_version"

    //Library to Parsing JSON using Moshi tool in Kotlin
    def moshi_version = "1.8.0"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

//    implementation 'com.tickaroo.tikxml:annotation:0.8.13'
//    implementation 'com.tickaroo.tikxml:core:0.8.13'
//    implementation 'com.tickaroo.tikxml:retrofit-converter:0.8.13'

    implementation 'com.squareup.retrofit2:converter-simplexml:2.6.2'

    implementation 'com.github.faruktoptas:RetrofitRssConverterFactory:0.1.0'

    //Simple Library to get Country name and Country code using spinner
    implementation 'com.github.joielechong:countrycodepicker:2.4.1'

    //Use to load the images at the runtime
    def glide_version = '4.10.0'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //Library to Show Graph
    implementation 'com.jjoe64:graphview:4.2.1'


}
